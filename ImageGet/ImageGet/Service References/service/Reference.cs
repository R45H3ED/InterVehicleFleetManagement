//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageGet.service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageCap", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class ImageCap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int ImageIDField;
        
        private int DriverIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleNameField;
        
        private System.DateTime DateTimeField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ThumbnailField;
        
        private int InterVechIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((this.ImageIDField.Equals(value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int DriverID {
            get {
                return this.DriverIDField;
            }
            set {
                if ((this.DriverIDField.Equals(value) != true)) {
                    this.DriverIDField = value;
                    this.RaisePropertyChanged("DriverID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string VehicleName {
            get {
                return this.VehicleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleNameField, value) != true)) {
                    this.VehicleNameField = value;
                    this.RaisePropertyChanged("VehicleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public byte[] Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int InterVechID {
            get {
                return this.InterVechIDField;
            }
            set {
                if ((this.InterVechIDField.Equals(value) != true)) {
                    this.InterVechIDField = value;
                    this.RaisePropertyChanged("InterVechID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="service.DatabaseServiceSoap")]
    public interface DatabaseServiceSoap {
        
        // CODEGEN: Generating message contract since element name GetListOfImageCaptureResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetListOfImageCapture", ReplyAction="*")]
        ImageGet.service.GetListOfImageCaptureResponse GetListOfImageCapture(ImageGet.service.GetListOfImageCaptureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetListOfImageCapture", ReplyAction="*")]
        System.IAsyncResult BeginGetListOfImageCapture(ImageGet.service.GetListOfImageCaptureRequest request, System.AsyncCallback callback, object asyncState);
        
        ImageGet.service.GetListOfImageCaptureResponse EndGetListOfImageCapture(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name ImageData from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UploadImageCapture", ReplyAction="*")]
        ImageGet.service.UploadImageCaptureResponse UploadImageCapture(ImageGet.service.UploadImageCaptureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UploadImageCapture", ReplyAction="*")]
        System.IAsyncResult BeginUploadImageCapture(ImageGet.service.UploadImageCaptureRequest request, System.AsyncCallback callback, object asyncState);
        
        ImageGet.service.UploadImageCaptureResponse EndUploadImageCapture(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListOfImageCaptureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListOfImageCapture", Namespace="http://tempuri.org/", Order=0)]
        public ImageGet.service.GetListOfImageCaptureRequestBody Body;
        
        public GetListOfImageCaptureRequest() {
        }
        
        public GetListOfImageCaptureRequest(ImageGet.service.GetListOfImageCaptureRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetListOfImageCaptureRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.DateTime dateTime;
        
        public GetListOfImageCaptureRequestBody() {
        }
        
        public GetListOfImageCaptureRequestBody(System.DateTime dateTime) {
            this.dateTime = dateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetListOfImageCaptureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetListOfImageCaptureResponse", Namespace="http://tempuri.org/", Order=0)]
        public ImageGet.service.GetListOfImageCaptureResponseBody Body;
        
        public GetListOfImageCaptureResponse() {
        }
        
        public GetListOfImageCaptureResponse(ImageGet.service.GetListOfImageCaptureResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetListOfImageCaptureResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.Generic.List<ImageGet.service.ImageCap> GetListOfImageCaptureResult;
        
        public GetListOfImageCaptureResponseBody() {
        }
        
        public GetListOfImageCaptureResponseBody(System.Collections.Generic.List<ImageGet.service.ImageCap> GetListOfImageCaptureResult) {
            this.GetListOfImageCaptureResult = GetListOfImageCaptureResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadImageCaptureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadImageCapture", Namespace="http://tempuri.org/", Order=0)]
        public ImageGet.service.UploadImageCaptureRequestBody Body;
        
        public UploadImageCaptureRequest() {
        }
        
        public UploadImageCaptureRequest(ImageGet.service.UploadImageCaptureRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UploadImageCaptureRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ImageGet.service.ImageCap ImageData;
        
        public UploadImageCaptureRequestBody() {
        }
        
        public UploadImageCaptureRequestBody(ImageGet.service.ImageCap ImageData) {
            this.ImageData = ImageData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadImageCaptureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UploadImageCaptureResponse", Namespace="http://tempuri.org/", Order=0)]
        public ImageGet.service.UploadImageCaptureResponseBody Body;
        
        public UploadImageCaptureResponse() {
        }
        
        public UploadImageCaptureResponse(ImageGet.service.UploadImageCaptureResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UploadImageCaptureResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool UploadImageCaptureResult;
        
        public UploadImageCaptureResponseBody() {
        }
        
        public UploadImageCaptureResponseBody(bool UploadImageCaptureResult) {
            this.UploadImageCaptureResult = UploadImageCaptureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DatabaseServiceSoapChannel : ImageGet.service.DatabaseServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetListOfImageCaptureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetListOfImageCaptureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<ImageGet.service.ImageCap> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<ImageGet.service.ImageCap>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadImageCaptureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadImageCaptureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseServiceSoapClient : System.ServiceModel.ClientBase<ImageGet.service.DatabaseServiceSoap>, ImageGet.service.DatabaseServiceSoap {
        
        private BeginOperationDelegate onBeginGetListOfImageCaptureDelegate;
        
        private EndOperationDelegate onEndGetListOfImageCaptureDelegate;
        
        private System.Threading.SendOrPostCallback onGetListOfImageCaptureCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadImageCaptureDelegate;
        
        private EndOperationDelegate onEndUploadImageCaptureDelegate;
        
        private System.Threading.SendOrPostCallback onUploadImageCaptureCompletedDelegate;
        
        public DatabaseServiceSoapClient() {
        }
        
        public DatabaseServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetListOfImageCaptureCompletedEventArgs> GetListOfImageCaptureCompleted;
        
        public event System.EventHandler<UploadImageCaptureCompletedEventArgs> UploadImageCaptureCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ImageGet.service.GetListOfImageCaptureResponse ImageGet.service.DatabaseServiceSoap.GetListOfImageCapture(ImageGet.service.GetListOfImageCaptureRequest request) {
            return base.Channel.GetListOfImageCapture(request);
        }
        
        public System.Collections.Generic.List<ImageGet.service.ImageCap> GetListOfImageCapture(System.DateTime dateTime) {
            ImageGet.service.GetListOfImageCaptureRequest inValue = new ImageGet.service.GetListOfImageCaptureRequest();
            inValue.Body = new ImageGet.service.GetListOfImageCaptureRequestBody();
            inValue.Body.dateTime = dateTime;
            ImageGet.service.GetListOfImageCaptureResponse retVal = ((ImageGet.service.DatabaseServiceSoap)(this)).GetListOfImageCapture(inValue);
            return retVal.Body.GetListOfImageCaptureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ImageGet.service.DatabaseServiceSoap.BeginGetListOfImageCapture(ImageGet.service.GetListOfImageCaptureRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetListOfImageCapture(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetListOfImageCapture(System.DateTime dateTime, System.AsyncCallback callback, object asyncState) {
            ImageGet.service.GetListOfImageCaptureRequest inValue = new ImageGet.service.GetListOfImageCaptureRequest();
            inValue.Body = new ImageGet.service.GetListOfImageCaptureRequestBody();
            inValue.Body.dateTime = dateTime;
            return ((ImageGet.service.DatabaseServiceSoap)(this)).BeginGetListOfImageCapture(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ImageGet.service.GetListOfImageCaptureResponse ImageGet.service.DatabaseServiceSoap.EndGetListOfImageCapture(System.IAsyncResult result) {
            return base.Channel.EndGetListOfImageCapture(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<ImageGet.service.ImageCap> EndGetListOfImageCapture(System.IAsyncResult result) {
            ImageGet.service.GetListOfImageCaptureResponse retVal = ((ImageGet.service.DatabaseServiceSoap)(this)).EndGetListOfImageCapture(result);
            return retVal.Body.GetListOfImageCaptureResult;
        }
        
        private System.IAsyncResult OnBeginGetListOfImageCapture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime dateTime = ((System.DateTime)(inValues[0]));
            return this.BeginGetListOfImageCapture(dateTime, callback, asyncState);
        }
        
        private object[] OnEndGetListOfImageCapture(System.IAsyncResult result) {
            System.Collections.Generic.List<ImageGet.service.ImageCap> retVal = this.EndGetListOfImageCapture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetListOfImageCaptureCompleted(object state) {
            if ((this.GetListOfImageCaptureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetListOfImageCaptureCompleted(this, new GetListOfImageCaptureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetListOfImageCaptureAsync(System.DateTime dateTime) {
            this.GetListOfImageCaptureAsync(dateTime, null);
        }
        
        public void GetListOfImageCaptureAsync(System.DateTime dateTime, object userState) {
            if ((this.onBeginGetListOfImageCaptureDelegate == null)) {
                this.onBeginGetListOfImageCaptureDelegate = new BeginOperationDelegate(this.OnBeginGetListOfImageCapture);
            }
            if ((this.onEndGetListOfImageCaptureDelegate == null)) {
                this.onEndGetListOfImageCaptureDelegate = new EndOperationDelegate(this.OnEndGetListOfImageCapture);
            }
            if ((this.onGetListOfImageCaptureCompletedDelegate == null)) {
                this.onGetListOfImageCaptureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetListOfImageCaptureCompleted);
            }
            base.InvokeAsync(this.onBeginGetListOfImageCaptureDelegate, new object[] {
                        dateTime}, this.onEndGetListOfImageCaptureDelegate, this.onGetListOfImageCaptureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ImageGet.service.UploadImageCaptureResponse ImageGet.service.DatabaseServiceSoap.UploadImageCapture(ImageGet.service.UploadImageCaptureRequest request) {
            return base.Channel.UploadImageCapture(request);
        }
        
        public bool UploadImageCapture(ImageGet.service.ImageCap ImageData) {
            ImageGet.service.UploadImageCaptureRequest inValue = new ImageGet.service.UploadImageCaptureRequest();
            inValue.Body = new ImageGet.service.UploadImageCaptureRequestBody();
            inValue.Body.ImageData = ImageData;
            ImageGet.service.UploadImageCaptureResponse retVal = ((ImageGet.service.DatabaseServiceSoap)(this)).UploadImageCapture(inValue);
            return retVal.Body.UploadImageCaptureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ImageGet.service.DatabaseServiceSoap.BeginUploadImageCapture(ImageGet.service.UploadImageCaptureRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadImageCapture(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadImageCapture(ImageGet.service.ImageCap ImageData, System.AsyncCallback callback, object asyncState) {
            ImageGet.service.UploadImageCaptureRequest inValue = new ImageGet.service.UploadImageCaptureRequest();
            inValue.Body = new ImageGet.service.UploadImageCaptureRequestBody();
            inValue.Body.ImageData = ImageData;
            return ((ImageGet.service.DatabaseServiceSoap)(this)).BeginUploadImageCapture(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ImageGet.service.UploadImageCaptureResponse ImageGet.service.DatabaseServiceSoap.EndUploadImageCapture(System.IAsyncResult result) {
            return base.Channel.EndUploadImageCapture(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUploadImageCapture(System.IAsyncResult result) {
            ImageGet.service.UploadImageCaptureResponse retVal = ((ImageGet.service.DatabaseServiceSoap)(this)).EndUploadImageCapture(result);
            return retVal.Body.UploadImageCaptureResult;
        }
        
        private System.IAsyncResult OnBeginUploadImageCapture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ImageGet.service.ImageCap ImageData = ((ImageGet.service.ImageCap)(inValues[0]));
            return this.BeginUploadImageCapture(ImageData, callback, asyncState);
        }
        
        private object[] OnEndUploadImageCapture(System.IAsyncResult result) {
            bool retVal = this.EndUploadImageCapture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadImageCaptureCompleted(object state) {
            if ((this.UploadImageCaptureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadImageCaptureCompleted(this, new UploadImageCaptureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadImageCaptureAsync(ImageGet.service.ImageCap ImageData) {
            this.UploadImageCaptureAsync(ImageData, null);
        }
        
        public void UploadImageCaptureAsync(ImageGet.service.ImageCap ImageData, object userState) {
            if ((this.onBeginUploadImageCaptureDelegate == null)) {
                this.onBeginUploadImageCaptureDelegate = new BeginOperationDelegate(this.OnBeginUploadImageCapture);
            }
            if ((this.onEndUploadImageCaptureDelegate == null)) {
                this.onEndUploadImageCaptureDelegate = new EndOperationDelegate(this.OnEndUploadImageCapture);
            }
            if ((this.onUploadImageCaptureCompletedDelegate == null)) {
                this.onUploadImageCaptureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadImageCaptureCompleted);
            }
            base.InvokeAsync(this.onBeginUploadImageCaptureDelegate, new object[] {
                        ImageData}, this.onEndUploadImageCaptureDelegate, this.onUploadImageCaptureCompletedDelegate, userState);
        }
    }
}
